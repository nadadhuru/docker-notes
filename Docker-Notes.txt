

What is the core concept of Docker by using Containers?
	Develop
	Deploy
	Run

What is containerization?
Use of Linux Containers (LIX) to deploy applications is called Containerization.

What are advantages of containerization or why is containerization is popular?

    Flexible: Even the most complex applications can be containerized.
    Lightweight: Containers leverage and share the host kernel.
    Interchangeable: You can deploy updates and upgrades on-the-fly.
    Portable: You can build locally, deploy to the cloud, and run anywhere.
    Scalable: You can increase and automatically distribute container replicas.
    Stackable: You can stack services vertically and on-the-fly.

What is a container?
its a runtime instance of an image that shares the kernel of host machine. Its runs as discrete process.
It runs natively on linux and shares the kernel with other containers

Whatis an image?
Its an executable package that contains everything needed (libraries, code, environment variables, config files) to run an application.

How to view list of running containers?
docker ps

State differences b/w VM and Container?


How to check Docker version?
docker --version

How to check Docker installation info?
docker run
or
docker version

How to test your docker installation?
By running hello-world program as mentioned below:

docker run hello-world

How to view list of images downloaded to your local?
docker images ls

How to list all containers?
docker container ls -all

What is the hirerachy in Docker?

	Stack
		services
			Containers

What is a docker file?
Portable images are defined by something called a "Dockerfile"
Dockerfile contains the information about your container environment such as Files, Network, Storage Volumes etc.

What are components in Dockerfile?
	FROM:		This defines which PARENT image to base from.
	WORKDIR:	
	COPY:		Use this to place any files inside a container at a specific folder. However files need to be placed in same folder as Dockerfile
	Run:		Any installations you need. E.g. Yum install vim or you can pass a file yum install -r filename
	EXPOSE:		Used for specifying port#
	ENV:		Define any environment variables
	CMD:		

How to create an image using Docker?

	docker build --tag=<nameofimage>

	docker build -t=<nameofimage>

How to set port?
	docker run -p <newport>:<defaultport> <containername>
	You should see a message that Python is serving your app at http://0.0.0.0:80. 
	But that message is coming from inside the container, which doesn’t know you mapped port 80 of that container to 4000, making the correct URL http://localhost:4000.
	
How to find IP address using Docker?
	docker-machine ip

Where is Docker config file located?
	its available in /etc/docker/daemon.json

How to set a DNS address?
	Add following line to docker config file.
	{
		"dns": ["your_dns_address", "8.8.8.8"]
	}
	
	Note:	Always make sure to restart Docker after updating config file.

How to specify if you use a proxy server for connecting?
	Proxy servers can block connections to your web app once it’s up and running. If you are behind a proxy server, add the following lines to your Dockerfile.
	Use ENV command and specify the Host and Port in the docker file.
	# Set proxy server, replace host:port with values for your servers
		ENV http_proxy host:port
		ENV https_proxy host:port

How to start/stop/restart Docker?
	service docker <start/stop/restart>

How to run an app in detached or background mode?
	docker run -d <containername>

How to stop a container? (Not DOCKER)
	docker container <stop> <containerid>

What is docker registry? & repository?
	A registry is a collection of repositories, and a repository is a collection of images

How do you setup your Private Registery?
	Using Docker Trusted Regsitry, you can setup your own registry for storing images.

How many repositories you can create in a Registry?
	Unlimited

What is the registry used by docker?
	Docker uses Docker's public registry by default

How do you login into Docker Hub?
	docker login

How do you tag an image?
	docker tag image username/repository:tag

How to publish or push the image?
	docker push username/repository:tag

How to pull an image ?
	docker run -p 4000:80 username/repository:tag

How do you scale & perform load balancing on your applications?
	This is achieved using the concept of Services in docker. A higher level than Container.
	
How do you define a service?
	This is done using docker-compose.yml file.

What is Docker Compose?
	Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a YAML file to configure your application’s services. 
	Then, with a single command, you create and start all the services from your configuration

How does the template (docker-compose.yml) looks like?
	version: "x"
	services:
	  web:
	    # replace username/repo:tag with your name and image details
		image: username/repo:tag
		deploy:
		  replicas: 5
		  resources:
            limits:
              cpus: "0.1"
              memory: 50M
          restart_policy:
            condition: on-failure
		ports:
		  - "4000:80"
		networks:
		  - webnet
	networks:
	  webnet:

How do you run your new load-balanced app?
	docker swarm init
	docker stack deploy -c docker-compose.yml <nameofyourapp>

	After doing above command - your app will be runnning in 5 containers with 10% of CPU and 50MB of RAM in each container. You can access app using port-4000.

How to view or list the service in your application?
	docker service ls

Same can be achieved using following comamnds:
	docker service ps getstartedlab_web
	docker container ls -q

How do you scale your app?
	Simply update the docker-compose.yml and re-run the docker stack deploy command

How to take down an app?
	docker stack rm <appname>

How to take down a swarm?
	docker swarm leave --force

what is docker swarm?
	A swarm is nothing but a  group of machine running docker grouped into a cluster. We will have a Swarm manager on a node, which will interact with other docker machines and create containers for your app.
	All the managing is done through Swarm Manager, and swarm is a tool for container orchestartion.

How to create a docker-machine?
	docker-machine create --driver virtualbox <nameofvm>

	PS:	Make sure you install docker-machine before running above command. Create 1 Manager and 2 or 3 Worker Machines

How to list all docker machines?
	docker-machine ls

How to view IP address of a docker machine?
	docker-machine ip <machinename>

How to connect to your docker machine?
	docker-machine ssh <machinename>
	PS:	Pls make sure to do ssh connect in all machines
	
How to initialize the docker swarm or how to make a machine Swarm Manager?
	docker swarm init --advertise-addr MANAGER_IP
	
	PS:	docker node ls --> this will list the details of swarm manager node and will not run or work in worker nodes.
	
How to join worker/nodes to swarm manager?
	docker swarm join-token worker		--> Once you run this on swarm manager, it will give you a command that you can copy & run on swarm workers.
	
	PS:	just like ssh-copy-id (e.g).	After adding all swarm workers, please go to swarm managaer and type docker node ls

How to check list of commands available with swarm?
	docker swarm

How to create a nginx application on multiple machines as a service?
	docker service create --replicas <x> -p 80:80 --name <servicename> <imagename>

	COMPARISON TABLE
					Vagrant				Docker
Virtualization		Virtual machine	 	Linux container
Resource isolation	Strong				Weak (shared kernel)
Startup time		Minutes				Seconds
Image build time	10+ minutes			mins
Size				1GB+				100MB+
Sharing				Vagrant Cloud		Docker Hub

How to view list of services running?
	docker service ps <servicename>
	docker service ls --> to view all services

Which IP to use for launching your app?
	YOu can use any manager or worker

How to scale up or down the service?
	In order to scale down or up - you need to be on Swarm managaer and run following command:
		docker service scale <servicename>=<replicas>

How to inspect any node?
	In order to do this - you need to be on manager swarm or node and run following comamnds:
		docker node inspect <nodename>
		docker node inspect self

How to inspect a worker node?
	You can't inspect it from Worker node. You must do this from Manager node.
	
How to update a service with a new image or updated image?
	docker service update --image <imagename>:<version> <servicename>

How to remove service?
	docker service rm <servicename>

How to shutdown node?
	docker node update --availability drain <nodename>

How to decouple or leave the swarm?
	docker swarm leave

How to stop a docker machine?
	docker-machine stop <machinename>
	PS:	you have to run this outside of nodes or from your main machine

How to remove a docker machine?
	docker-machine rm <machinename>




	



